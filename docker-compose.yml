version: '3.4'

services:
  redis-node1:
    build:
      context: redis
    ports:
      - "7000:7000"
      - "17000:17000"
    restart: always
    entrypoint: ["redis-server", "/etc/redis/rediscluster.conf", "--port", "7000", "--cluster-announce-ip", "redis-node1", "--appendonly", "yes", "--maxmemory", "300mb", "--maxmemory-policy", "allkeys-lru"]
    container_name: redis-node1
    networks:
      - redis-network

  redis-node2:
    build:
      context: redis
    ports:
      - "7001:7001"
      - "17001:17001"
    restart: always
    entrypoint: ["redis-server", "/etc/redis/rediscluster.conf", "--port", "7001", "--cluster-announce-ip", "redis-node2", "--appendonly", "yes", "--maxmemory", "300mb", "--maxmemory-policy", "allkeys-lru"]
    container_name: redis-node2
    networks:
      - redis-network

  redis-node3:
    build:
      context: redis
    ports:
      - "7002:7002"
      - "17002:17002"
    restart: always
    entrypoint: ["redis-server", "/etc/redis/rediscluster.conf", "--port", "7002", "--cluster-announce-ip", "redis-node3", "--appendonly", "yes", "--maxmemory", "300mb", "--maxmemory-policy", "allkeys-lru"]
    container_name: redis-node3
    networks:
      - redis-network

  redis-node4:
    build:
      context: redis
    ports:
      - "7003:7003"
      - "17003:17003"
    restart: always
    entrypoint: ["redis-server", "/etc/redis/rediscluster.conf", "--port", "7003", "--cluster-announce-ip", "redis-node4", "--appendonly", "yes", "--maxmemory", "300mb", "--maxmemory-policy", "allkeys-lru"]
    container_name: redis-node4
    networks:
      - redis-network
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3

  redis-node5:
    build:
      context: redis
    ports:
      - "7004:7004"
      - "17004:17004"
    restart: always
    entrypoint: ["redis-server", "/etc/redis/rediscluster.conf", "--port", "7004", "--cluster-announce-ip", "redis-node5", "--appendonly", "yes", "--maxmemory", "300mb", "--maxmemory-policy", "allkeys-lru"]
    container_name: redis-node5
    networks:
      - redis-network
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3

  redis-node6:
    build:
      context: redis
    ports:
      - "7005:7005"
      - "17005:17005"
    restart: always
    entrypoint: ["redis-server", "/etc/redis/rediscluster.conf", "--port", "7005", "--cluster-announce-ip", "redis-node6", "--appendonly", "yes", "--maxmemory", "300mb", "--maxmemory-policy", "allkeys-lru"]
    container_name: redis-node6
    networks:
      - redis-network
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3

  redis-cluster-creator:
    image: redis:7.2.4
    entrypoint: ["/bin/sh", "-c", 'echo "yes" | redis-cli -a ${REDIS_PASSWORD} --cluster create redis-node1:7000 redis-node2:7001 redis-node3:7002 redis-node4:7003 redis-node5:7004 redis-node6:7005 --cluster-replicas 1']
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
      - redis-node4
      - redis-node5
      - redis-node6
    networks:
      - redis-network
  producer-comsumer-model:
    build:
      context: golang
    depends_on:
      - redis-cluster-creator
    networks:
      - redis-network
    env_file:
      - .env
  
networks:
  redis-network:
    driver: bridge
